generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  title       String?   @db.VarChar(255)
  eventDate   DateTime
  content     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  formId      String   @unique
  published   Boolean  @default(false)
  image       String
  location    String

  interestedProfile Profile[] @relation("interestEvent")

  owner        User         @relation(fields: [userId], references: [id])
  participants User[]       @relation("participants")
  userId       Int          @unique
  attachments  Attachment[]
  Category     Category[]
}

model Profile {
  id               Int        @id @default(autoincrement())
  bio              String?
  fullName         String
  department       String
  phoneNumber      String?
  studentId        String
  facebookContact  String?
  igContact        String?
  lineContact      String?
  interestingEvent Event[]    @relation("interestEvent")
  tag              Category[]
  user             User       @relation(fields: [userId], references: [id])
  userId           Int        @unique
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  profile Profile?

  attendedEvents Event[] @relation("participants")

  Event Event?
}

model Attachment {
  id    Int    @id @default(autoincrement())
  name  String
  url   String @db.Text
  event Event  @relation(fields: [eventId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  eventId   Int

  @@index([eventId])
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  events    Event[]
  Profile   Profile? @relation(fields: [profileId], references: [id])
  profileId Int?
}